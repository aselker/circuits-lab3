(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     22288,        519]
NotebookOptionsPosition[     21296,        493]
NotebookOutlinePosition[     21654,        509]
CellTagsIndexPosition[     21611,        506]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Ve", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Ic", "/", "\[Alpha]"}], ")"}], "R"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"soln", " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Refine", "[", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Ic", "\[Equal]", 
          RowBox[{"Is", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Vb", "-", "Ve"}], ")"}], "/", "Ut"}], "]"}], "-", 
             "1"}], ")"}]}]}], ",", " ", 
         RowBox[{"\[Alpha]", ">", "0"}], ",", 
         RowBox[{"R", ">", "0"}], ",", " ", 
         RowBox[{"Ut", ">", "0"}], ",", " ", 
         RowBox[{"Is", ">", "0"}]}], "}"}], ",", " ", "Ic", ",", " ", "Reals",
        ",", " ", 
       RowBox[{"Method", " ", "\[Rule]", " ", "Reduce"}]}], "]"}], ",", " ", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]", ">", "0"}], ",", 
        RowBox[{"R", ">", "0"}], ",", " ", 
        RowBox[{"Ut", ">", "0"}], ",", " ", 
        RowBox[{"Is", ">", "0"}]}], "}"}]}]}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.760557663048316*^9, 3.760557663937009*^9}, {
  3.760557702844035*^9, 3.76055775917199*^9}, {3.760557858130007*^9, 
  3.760557861447277*^9}, {3.76055789362738*^9, 3.760557901928383*^9}, {
  3.760557952690218*^9, 3.760558050581491*^9}, {3.760558895648501*^9, 
  3.7605588999969397`*^9}, {3.7605589537754993`*^9, 3.7605590237955713`*^9}, {
  3.760564428332456*^9, 
  3.760564444302635*^9}},ExpressionUUID->"a6d5a17d-fa10-4a39-8aea-\
56757d8ba52f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"Ic", "\[Rule]", 
    RowBox[{
     RowBox[{"-", "Is"}], "+", 
     FractionBox[
      RowBox[{"Ut", " ", "\[Alpha]", " ", 
       RowBox[{"ProductLog", "[", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{
             RowBox[{"Is", " ", "R"}], "+", 
             RowBox[{"Vb", " ", "\[Alpha]"}]}], 
            RowBox[{"Ut", " ", "\[Alpha]"}]]], " ", "Is", " ", "R"}], 
         RowBox[{"Ut", " ", "\[Alpha]"}]], "]"}]}], "R"]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7605577598604403`*^9, 3.7605578637697906`*^9, 3.76055790308313*^9, {
   3.7605580260640697`*^9, 3.760558052777896*^9}, 3.760558911947901*^9, {
   3.7605589591962347`*^9, 3.760559028331647*^9}, {3.7605644380605497`*^9, 
   3.760564448925324*^9}},ExpressionUUID->"6f400f45-8487-434f-a25c-\
195f8625e2a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"y", "\[Equal]", 
      RowBox[{"Exp", "[", 
       RowBox[{"x", "+", 
        RowBox[{"a", "*", "y"}]}], "]"}]}], "}"}], ",", " ", "y", ",", " ", 
    "Reals", ",", " ", 
    RowBox[{"Method", " ", "\[Rule]", " ", "Reduce"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.760557918753689*^9, 3.760557936250993*^9}, {
  3.760558063281403*^9, 3.76055814560463*^9}, {3.760558224086454*^9, 
  3.760558310263568*^9}, {3.760558358106657*^9, 3.760558358616425*^9}, {
  3.760558620196968*^9, 
  3.760558630863552*^9}},ExpressionUUID->"8b8324f4-dfbd-4d34-986b-\
a0b79d7c3495"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"ProductLog", "[", 
          RowBox[{
           RowBox[{"-", "a"}], " ", 
           SuperscriptBox["\[ExponentialE]", "x"]}], "]"}], "a"]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", ">", "0"}], "&&", 
          RowBox[{
           RowBox[{"x", "+", 
            RowBox[{"Log", "[", "a", "]"}]}], "\[LessEqual]", 
           RowBox[{"-", "1"}]}]}], ")"}], "||", 
        RowBox[{"a", "<", "0"}]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"ProductLog", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{
            RowBox[{"-", "a"}], " ", 
            SuperscriptBox["\[ExponentialE]", "x"]}]}], "]"}], "a"]}], ",", 
       RowBox[{
        RowBox[{"a", ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"x", "+", 
          RowBox[{"Log", "[", "a", "]"}]}], "\[LessEqual]", 
         RowBox[{"-", "1"}]}]}]}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7605581214556417`*^9, {3.760558231602765*^9, 3.760558274840831*^9}, 
   3.76055836014847*^9, 
   3.7605586345708323`*^9},ExpressionUUID->"7a8ee3f3-d9e4-4d69-867b-\
00cc46ec83d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["y=e^(x+a*y), solve for y", "WolframAlphaLong",
 CellChangeTimes->{{3.760558169621689*^9, 
  3.760558189219758*^9}},ExpressionUUID->"f4c87db1-ee49-47ec-a7c3-\
90b7376b173b"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "y=e^(x+a*y), solve for y", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Solve[y == E^(x + a y), y, MaxExtraConditions -> Automatic]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"solve\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    TagBox[
                    RowBox[{"y", "\[LongEqual]", 
                    TagBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"x", "+", 
                    RowBox[{"a", " ", "y"}]}]], Identity]}], HoldForm], 
                    StyleBox["\" for \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "y"}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None, None, None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              $CellContext`TagBoxWrapper["Separator" -> " "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Results", "scanner" -> "Solve", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "2", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["minput", {}, {"Reduce[y == E^(x + a y), {y}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox["\" and \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              RowBox[{"y", "\[LongEqual]", 
                TagBox[
                 SuperscriptBox["\[ExponentialE]", "x"], Identity]}], 
              RowBox[{"a", "\[LongEqual]", "0"}]}, "RowWithSeparator"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["minput", {}, {"Reduce[y == E^(x + a y), {y}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox["\" and \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False], 
              RowBox[{"y", "\[LongEqual]", 
                TagBox[
                 RowBox[{"-", 
                   FractionBox[
                    TemplateBox[{"n", 
                    RowBox[{
                    RowBox[{"-", "a"}], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"]}]}, "ProductLog", 
                    DisplayFunction -> (RowBox[{
                    SubscriptBox["W", #], "(", #2, ")"}]& )], "a"]}], 
                 Identity]}], 
              RowBox[{"a", "\[NotEqual]", "0"}], 
              RowBox[{"n", "\[Element]", 
                TagBox["\[DoubleStruckCapitalZ]", 
                 Function[{}, Integers]]}]}, "RowWithSeparator"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["infos", {"count" -> "2"}, {
       XMLElement[
       "info", {
        "text" -> 
         "W_k(z) is the analytic continuation of the product log function"}, {
        
         XMLElement[
         "link", {
          "url" -> 
           "http://reference.wolfram.com/language/ref/ProductLog.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> 
           "http://functions.wolfram.com/ElementaryFunctions/ProductLog2", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/LambertW-Function.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                RowBox[{
                  SubscriptBox["W", "k"], "(", "z", ")"}], "\" \"", 
                "\"is the analytic continuation of the product log \
function\""}, "RowDefault"], TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}], 
       XMLElement["info", {"text" -> "Z is the set of integers"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Integers.html", 
           "text" -> "Documentation", "title" -> "Documentation"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Z.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                TagBox["\[DoubleStruckCapitalZ]", 
                 Function[{}, Integers]], "\" \"", 
                "\"is the set of integers\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False, False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "Solve", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
    "1.5090000000000001", "parsetiming" -> "0.753", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSPa25131c7a60d94cf8e48200002gehg49613gc82a1", "host" -> 
    "http://www3.wolframalpha.com", "server" -> "41", "related" -> 
    "http://www3.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa25141c7a60d94cf8e48200005ef3hae6c5e2f87f1770361261367161273", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2019, 3, 2, 18, 29, 54.142383`8.486112341140526}, "Line" -> 11,
     "SessionID" -> 24246117484101549749}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "y=e^(x+a*y), solve for y"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{3084., {232., 241.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.760558194275525*^9},ExpressionUUID->"fd2118b0-1ff1-4c38-bd94-\
bb550edcc8cc"]
}, Open  ]],

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{
  3.760558217909897*^9},ExpressionUUID->"8e14f03f-4732-4e1e-ac32-\
5335b8ded4f4"]
},
WindowSize->{3200, 1771},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->2.,
FrontEndVersion->"11.2 for Linux x86 (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1728, 44, 108, "Input",ExpressionUUID->"a6d5a17d-fa10-4a39-8aea-56757d8ba52f"],
Cell[2311, 68, 925, 24, 129, "Output",ExpressionUUID->"6f400f45-8487-434f-a25c-195f8625e2a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3273, 97, 683, 17, 108, "Input",ExpressionUUID->"8b8324f4-dfbd-4d34-986b-a0b79d7c3495"],
Cell[3959, 116, 1482, 44, 101, "Output",ExpressionUUID->"7a8ee3f3-d9e4-4d69-867b-00cc46ec83d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5478, 165, 178, 3, 84, "WolframAlphaLong",ExpressionUUID->"f4c87db1-ee49-47ec-a7c3-90b7376b173b"],
Cell[5659, 170, 15473, 315, 491, "Print",ExpressionUUID->"fd2118b0-1ff1-4c38-bd94-bb550edcc8cc"]
}, Open  ]],
Cell[21147, 488, 145, 3, 62, "Input",ExpressionUUID->"8e14f03f-4732-4e1e-ac32-5335b8ded4f4"]
}
]
*)

